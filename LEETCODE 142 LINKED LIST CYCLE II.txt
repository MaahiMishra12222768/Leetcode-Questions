LEETCODE 142 LINKED LIST CYCLE II

class Solution {
public:
    ListNode *detectCycle(ListNode *head) {
     if(head==NULL || head->next == NULL){
            return nullptr;
        }
        ListNode* fast = head;
        ListNode* slow = head;
        do{
            slow = slow->next;
            fast = fast->next->next;
            
             }

        while(fast != NULL && fast -> next != NULL && slow != fast);
          
            
            if(slow !=fast){
                return nullptr;
            }    
            slow = head;
            while(slow != fast){
                slow= slow->next;
                fast = fast->next;
            }
            return slow;
    }
};